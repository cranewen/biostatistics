setwd("~/Documents/2017 Spring Classes")
plot(fn(limitC))
fn <- function(x) 5*x+log(x)
gn <- function(y) y^2
limitC <- c(1:1000)
plot(fn(limitC))
data <- c(fn(limitC), gn(limitC))
plot(data)
plot(fn(limitC))
plot(gn(limitC))
source("http://www.bioconductor.org/biocLite.R")
biocLite()
ALLB1 <- exprs(ALL[,ALL$BT=="B1"])
library(ALL)
data("ALL")
ALLB1 <- exprs(ALL[,ALL$BT=="B1"])
meanB1 <- apply(ALLB1, 1, mean)
View(meanB1)
setwd("~/Documents/2017 Spring Classes/MATH 7340/Module 3")
rm(llist = ls())
rm(list = ls())
factorial(3)
factorial(5)
factorial(10)
factorial(100)
factorial(2)
fx <- function(x) 2^x/factorial(x)*exp(-2)
#P(X = 1)
px1 <- f(1)
px1 <- fx(1)
px2 <- integrate(fx, lower = 0, upper = 4)
px2 <- integrate(fx, lower = 0, upper = 4)$value
dbinom(2, 3, 0.25)
px2 <- fx(0) + fx(1) + fx(2) + fx(3)
px2
px2 <- fx(0) + fx(1) + fx(2) + fx(3)
vec4.range <- c(0,1,2)
sum(dbinom(vec4.range, 3, 0.25))
Ex4 <- sum(vec4.range*dbinom(vec4.range, 3, 0.25))
Var4 <- sum((vec4.range-Ex4)^2*dbinom(vec4.range, 3, 0.25))
fx5 <- function(x) dchisq(x,3)
px5 <- integrate(fx5, lower = 1, upper = 4)
px5 <- integrate(fx5, lower = 1, upper = 4)$value
Ex5 <- integrate(function(x) x*integrate(fx5, lower = 1, upper = 4)$value, lower = 1, upper = 4)$value
Ex5 <- integrate(function(x) x*integrate(fx5(x), lower = 1, upper = 4)$value, lower = 1, upper = 4)$value
Ex5 <- integrate(function(x) x*fx5, lower = 1, upper = 4)$value
Ex5 <- integrate(function(x) x*fx5(x), lower = 1, upper = 4)$value
px5 <- integrate(fx5, lower = 1, upper = 4)$value
Ex5 <- integrate(function(x) x*fx5(x), lower = 1, upper = 4)$value
sum(dbinom(vec4.range, 3, 0.25))
vec4.range <- c(0,1,2,3)
sum(dbinom(vec4.range, 3, 0.25))
Ex4 <- sum(vec4.range*dbinom(vec4.range, 3, 0.25))
Var4 <- sum((vec4.range-Ex4)^2*dbinom(vec4.range, 3, 0.25))
vec4.range <- c(0,1,2)
sum(dbinom(vec4.range, 3, 0.25))
Ex4 <- sum(vec4.range*dbinom(vec4.range, 3, 0.25))
Var4 <- sum((vec4.range-Ex4)^2*dbinom(vec4.range, 3, 0.25))
px5 <- integrate(fx5, lower = 0, upper = 3)$value
Ex5 <- integrate(function(x) x*fx5(x), lower = 1, upper = 4)$value
Ex5 <- integrate(function(x) x*fx5(x), lower = 0, upper = 3)$value
px5 <- integrate(fx5, lower = 0, upper = 2)$value
px5 <- integrate(fx5, lower = 0, upper = 3)$value
px5 <- integrate(fx5, lower = 1, upper = 3)$value
Ex5 <- integrate(function(x) x*fx5(x), lower = 1, upper = 3)$value
px5 <- integrate(fx5, lower = 1, upper = 4)$value
Ex5 <- integrate(function(x) x*fx5(x), lower = 1, upper = 4)$value
px5 <- integrate(fx5, lower = 0, upper = 3)$value
Ex5 <- integrate(function(x) x*fx5(x), lower = 0, upper = 3)$value
Ex5 <- integrate(function(x) x*fx5(x), lower = 0, upper = Inf)$value
px5 <- integrate(fx5, lower = 1, upper = 4)$value
Ex5 <- integrate(function(x) x*fx5(x), lower = 1, upper = 4)$value
Var5 <- integrate(function(x) (x-Ex5)^2*fx5(x), lower = 1, upper = 4)$value
Ex5 <- integrate(function(x) x*fx5(x), lower = 0, upper = Inf)$value
Var5 <- integrate(function(x) (x-Ex5)^2*fx5(x), lower = 0, upper = Inf)$value
1
Ex5 <- integrate(function(x) x*fx5(x), lower = 1, upper = 4)$value
Var5 <- integrate(function(x) (x-Ex5)^2*fx5(x), lower = 1, upper = 4)$value
Var5 <- integrate(function(x) (x-Ex5)^2, lower = 1, upper = 4)$value
Var5 <- integrate(function(x) (x-Ex5)^2*fx5(x), lower = 1, upper = 4)$value
mcData5 <- rchisq(100000, 3)
sum(mcData5)
View(mcData5)
fm5 <- function(x) rchisq(x, 3)
pm5 <- integrate(fm5(100000), lower = 1, upper = 4)
fm5 <- function(x) rchisq(x, 3)
sum <- 0
for (i in 1:100000){
if(mcData5[i]<4 && mcData5[i]>1) {
sum = sum + 1
}
}
sum/100000
mcData5 <- rchisq(100000, 3)
sum <- 0
for (i in 1:100000){
if(mcData5[i]<4 && mcData5[i]>1) {
sum = sum + 1
}
}
sum/100000
mcData5 <- rchisq(100000, 3)
#fm5 <- function(x) rchisq(x, 3)
sum <- 0
for (i in 1:100000){
if(mcData5[i]<4 && mcData5[i]>1) {
sum = sum + 1
}
}
sum/100000
mcData5 <- rchisq(100000, 3)
#fm5 <- function(x) rchisq(x, 3)
sum <- 0
for (i in 1:100000){
if(mcData5[i]<4 && mcData5[i]>1) {
sum = sum + 1
}
}
pm5 <- sum/100000
mcData5 <- rchisq(100000, 3)
#fm5 <- function(x) rchisq(x, 3)
sum <- 0
for (i in 1:100000){
if(mcData5[i]<4 && mcData5[i]>1) {
sum = sum + 1
}
}
pm5 <- sum/100000
pm5
pnorm(98, 92, 8)
dnorm(98, 92, 8)
dnorm(88, 92, 8)
pnorm(88, 92, 8)
pnorm(8, 92, 8)
pnorm(68, 92, 8)
pnorm(80, 92, 8)
pnorm(1, 1.6, 0.4)
integrate(function(x) pnorm(x,1.6,0.4), lower = 1, upper = 1.6)$value
pnorm(1.6, 1.6, 0.4) - pnorm(1, 1.6, 0.4)
p7a <- pnorm(1.6, 1.6, 0.4) - pnorm(1, 1.6, 0.4)
nsim7 <- 500000
mcData7 <- rnorm(nsim7, 1.6, 0.4)
View(mcData7)
write.csv(mcData7,"mcData7.csv")
mcData7 <- rnorm(nsim7, 1.6, 0.4)
sum7 <- 0
for (i in 1:500000) {
if(mcData7[i]<=1.6 && mcData7[i]>=1){
sum7 = sum7 + 1
}
}
p7b <- sum7/nsim7
dbinom(2, 5, 0.4)
dbinom(2, 5, p7a)
dbinom(2, 5, p7a)
p7c <- dbinom(2, 5, p7a)
1-p7c
df(2,5)
df(1,2,5)
df(2,2,5)
df(2000,2,5)
df(2001,2,5)
test<-rf(10000,2,5)
View(test)
meanX <- mean(rf(100000, 2, 5))
meanY <- mean(rf(100000, 10, 5))
X <- rf(100000, 2, 5)
meanX <- mean(X)
sdX <- sd(X)
Y <- rf(100000, 10, 5)
meanY <- mean(Y)
sdY <- sd(Y)
meanXformula <- 5/(5-2)
varXformula <- 2*5^2*(5+2-2)/(2*(5-2)^2*(5-4))
X <- rf(100000, 2, 5)
meanX <- mean(X)
varX <- var(X)
Y <- rf(100000, 10, 5)
meanY <- mean(Y)
varY <- var(Y)
#(b)
meanXformula <- 5/(5-2)
varXformula <- 2*5^2*(5+2-2)/(2*(5-2)^2*(5-4))
meanYformula <- 5/(5-2)
varYformula <- 2*5^2*(5+10-2)/(10*(5-2)^2*(5-4))
X <- rf(100000, 2, 5)
meanX <- mean(X)
varX <- var(X)
Y <- rf(100000, 10, 5)
meanY <- mean(Y)
varY <- var(Y)
#(b)
meanXformula <- 5/(5-2)
varXformula <- 2*5^2*(5+2-2)/(2*(5-2)^2*(5-4))
meanYformula <- 5/(5-2)
varYformula <- 2*5^2*(5+10-2)/(10*(5-2)^2*(5-4))
X <- rf(100000, 2, 5)
meanX <- mean(X)
varX <- var(X)
Y <- rf(100000, 10, 5)
meanY <- mean(Y)
varY <- var(Y)
#(b)
meanXformula <- 5/(5-2)
varXformula <- 2*5^2*(5+2-2)/(2*(5-2)^2*(5-4))
meanYformula <- 5/(5-2)
varYformula <- 2*5^2*(5+10-2)/(10*(5-2)^2*(5-4))
Y <- rf(100000, 10, 5)
X <- rf(100000, 2, 5)
varX <- var(X)
varY <- var(Y)
X <- rf(100000, 2, 5)
meanX <- mean(X)
varX <- var(X)
Y <- rf(100000, 10, 5)
meanY <- mean(Y)
varY <- var(Y)
#(b)
meanXformula <- 5/(5-2)
varXformula <- 2*5^2*(5+2-2)/(2*(5-2)^2*(5-4))
meanYformula <- 5/(5-2)
varYformula <- 2*5^2*(5+10-2)/(10*(5-2)^2*(5-4))
X <- rf(100000, 2, 5)
meanX <- mean(X)
varX <- var(X)
Y <- rf(100000, 10, 5)
meanY <- mean(Y)
varY <- var(Y)
#(b)
meanXformula <- 5/(5-2)
varXformula <- 2*5^2*(5+2-2)/(2*(5-2)^2*(5-4))
meanYformula <- 5/(5-2)
varYformula <- 2*5^2*(5+10-2)/(10*(5-2)^2*(5-4))
X <- rf(100000, 2, 5)
meanX <- mean(X)
varX <- var(X)
Y <- rf(100000, 10, 5)
meanY <- mean(Y)
varY <- var(Y)
X <- rf(100000, 2, 5)
meanX <- mean(X)
varX <- var(X)
Y <- rf(100000, 10, 5)
meanY <- mean(Y)
varY <- var(Y)
X <- rf(1000000, 2, 5)
meanX <- mean(X)
varX <- var(X)
Y <- rf(1000000, 10, 5)
meanY <- mean(Y)
varY <- var(Y)
X <- rf(1000000, 2, 5)
meanX <- mean(X)
varX <- var(X)
Y <- rf(1000000, 10, 5)
meanY <- mean(Y)
varY <- var(Y)
X <- rf(1000000, 2, 5)
meanX <- mean(X)
varX <- var(X)
Y <- rf(1000000, 10, 5)
meanY <- mean(Y)
varY <- var(Y)
X <- rf(1000000, 2, 5)
meanX <- mean(X)
varX <- var(X)
Y <- rf(1000000, 10, 5)
meanY <- mean(Y)
varY <- var(Y)
#(b)
X <- rf(10000000, 2, 5)
meanX <- mean(X)
varX <- var(X)
Y <- rf(10000000, 10, 5)
meanY <- mean(Y)
varY <- var(Y)
X <- rf(10000000, 2, 5)
meanX <- mean(X)
varX <- var(X)
Y <- rf(10000000, 10, 5)
meanY <- mean(Y)
varY <- var(Y)
X <- rf(10000000, 2, 5)
meanX <- mean(X)
varX <- var(X)
Y <- rf(10000000, 10, 5)
meanY <- mean(Y)
varY <- var(Y)
rm(test)
rm(sdX)
rm(sdY)
$n=3$ , $p=0.25$
$n=3$ $p=0.25$
$n=3, p=0.25$
$$n=3, p=0.25 $$
$n=3, p=0.25$
$ n=3, p=0.25$
$$n=3, p=0.25$$
$$n=3, p=0.25 $$
$${n=3, p=0.25} $$
$$ {n=3, p=0.25} $$
$$ n=3, p=0.25 $$
$$n=3, p=0.25 $$
$$ {n=3, p=0.25}$$
$$ n=3, p=0.25$$
$$n=3, p=0.25$$
$$n=3, p=0.25$$
$$ n=3, p=0.25$$
$ n=3, p=0.25$$
$ n=3, p=0.25$
$ n=3, p=0.25 $
\[n=3, p=0.25\]
\(n=3, p=0.25\)
##Question 3
\(n=3, p=0.25\)
mcData5 <- rchisq(100000, 3)
sum <- 0
for (i in 1:100000){
if(mcData5[i]<4 && mcData5[i]>1) {
sum = sum + 1
}
}
pm5 <- sum/100000 #yes
Var(Y) = 4^2*10 = 160\\
Var(Y) = 4^2*10 = 160\\*
rm(list = ls())
library(mvtnorm)
warnings()
v1<-c(0:3)
sum(dbinom(v1,3,0.25))
rm(v1)
